# Generated by Django 5.1.7 on 2025-10-02 18:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0004_course_duration_course_instructor_name_course_rating_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('category', models.CharField(choices=[('technology', 'Technology'), ('business', 'Business'), ('education', 'Education'), ('health', 'Health'), ('lifestyle', 'Lifestyle'), ('finance', 'Finance'), ('other', 'Other')], default='other', max_length=20)),
                ('excerpt', models.TextField(help_text='Brief description of the article', max_length=300)),
                ('content', models.TextField()),
                ('featured_image', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('read_time', models.IntegerField(default=5, help_text='Estimated read time in minutes')),
                ('views_count', models.IntegerField(default=0)),
                ('likes_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Webinar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('agenda', models.TextField(blank=True, help_text='Webinar agenda/outline')),
                ('thumbnail_image', models.URLField(blank=True, null=True)),
                ('scheduled_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=60)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('registration_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('full', 'Full')], default='open', max_length=20)),
                ('max_attendees', models.IntegerField(blank=True, help_text='Leave blank for unlimited', null=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('meeting_link', models.URLField(blank=True, help_text='Zoom/Teams/Meet link')),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_passcode', models.CharField(blank=True, max_length=50)),
                ('recording_url', models.URLField(blank=True, null=True)),
                ('recording_available', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('live', 'Live'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('registered_count', models.IntegerField(default=0)),
                ('attended_count', models.IntegerField(default=0)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('presenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webinars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='courses.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('article', 'user')},
            },
        ),
        migrations.CreateModel(
            name='WebinarRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False)),
                ('feedback_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('feedback_comment', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webinar_registrations', to=settings.AUTH_USER_MODEL)),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='courses.webinar')),
            ],
            options={
                'unique_together': {('webinar', 'user')},
            },
        ),
    ]
